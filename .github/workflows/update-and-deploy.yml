name: Update Data and Deploy to GitHub Pages

on:
  # 1日4回の自動実行（JST: 6:00, 12:00, 18:00, 24:00）
  schedule:
    - cron: '0 21 * * *'  # JST 06:00 (UTC 21:00)
    - cron: '0 3 * * *'   # JST 12:00 (UTC 03:00)
    - cron: '0 9 * * *'   # JST 18:00 (UTC 09:00)
    - cron: '0 15 * * *'  # JST 24:00 (UTC 15:00)

  # 手動実行も可能にする
  workflow_dispatch:
    inputs:
      force_full_update:
        description: 'Force full data refresh (ignore cache)'
        required: false
        default: false
        type: boolean

# 同時実行をキャンセルして、常に最新の1つだけが実行されるようにする
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write # git push と gh-pages へのデプロイに必要

    steps:
      # 1. 環境準備
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        with:
          # cache.jsonをコミットするためにリポジトリの全履歴を取得
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      # 2. ビルド実行
      - name: 🚀 Run build script
        env:
          RIOT_API_KEY: ${{ secrets.RIOT_API_KEY }}
          TARGET_REGION: 'jp1'
          ACCOUNT_REGION: 'asia'
          OUTPUT_DIR: '.'
          CACHE_DIR: './data'
          DEBUG_MODE: false
          FORCE_UPDATE: ${{ github.event.inputs.force_full_update || 'false' }}
        run: |
          echo "Build started at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          node src/build.js --prod
          echo "Build completed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"

      # 3. ビルド結果の検証
      - name: 🔍 Verify build results
        id: build-stats
        run: |
          echo "Validating build architecture..."
          # 必須ファイルの存在チェック
          REQUIRED_FILES=("index.html" "sw.js" "manifest.json" "data/cache.json")
          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Critical file missing: $file"
              exit 1
            fi
            echo "✅ Found required file: $file"
          done
          
          # 生成ページ数カウント
          HTML_COUNT=$(find . -maxdepth 1 -name "*.html" | wc -l)
          echo "pages-generated=$HTML_COUNT" >> $GITHUB_OUTPUT
          
          # 画像数カウント
          IMAGE_COUNT=$(find images -type f 2>/dev/null | wc -l || echo 0)
          echo "images-downloaded=$IMAGE_COUNT" >> $GITHUB_OUTPUT
          
          echo "📊 Build statistics:"
          echo "  - HTML Pages: $HTML_COUNT"
          echo "  - Images: $IMAGE_COUNT"

      # 4. cache.jsonとHTMLファイルの変更をコミット
      - name: 💾 Commit updated cache.json and HTML files
        id: commit-cache
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 変更があるか確認（cache.jsonまたはHTMLファイル）
          if ! git diff --quiet data/cache.json || ! git diff --quiet -- '*.html' 'images/' 'manifest.json' 'sw.js'; then
            echo "✅ Files have been updated. Committing changes..."
            git add data/cache.json *.html images/ manifest.json sw.js
            git commit -m "🤖 Auto-update: Refresh data and static files" -m "Triggered by: ${{ github.event_name }}"
            git push
            echo "commit-pushed=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ No changes detected in tracked files. Skipping commit."
            echo "commit-pushed=false" >> $GITHUB_OUTPUT
          fi

      # 5. GitHub Pages へデプロイ
      - name: 🚀 Deploy to GitHub Pages
        if: steps.commit-cache.outputs.commit-pushed == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          # デプロイに不要なファイルを除外
          exclude_assets: |
            .github/
            node_modules/
            src/
            templates/
            .env*
            package*.json
            *.md
          force_orphan: true # 常にクリーンな状態でデプロイ
          enable_jekyll: false
          commit_message: |
            🤖 Deploy: Update site content
            
            Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
            Triggered by: ${{ github.event_name }}
            Pages Generated: ${{ steps.build-stats.outputs.pages-generated }}
            Images: ${{ steps.build-stats.outputs.images-downloaded }}

      # 6. 完了通知
      - name: ✅ Post-run summary
        if: always()
        run: |
          echo "### Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Status | **${{ job.status }}** |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|" >> $GITHUB_STEP_SUMMARY
          echo "| Trigger | ${{ github.event_name }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Pages Generated | ${{ steps.build-stats.outputs.pages-generated }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Images Downloaded | ${{ steps.build-stats.outputs.images-downloaded }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Cache Updated | ${{ steps.commit-cache.outputs.commit-pushed }} |" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "🎉 Deployment completed successfully!" >> $GITHUB_STEP_SUMMARY
            echo "🌐 Site is live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Deployment failed. Please check the logs for details." >> $GITHUB_STEP_SUMMARY
          fi